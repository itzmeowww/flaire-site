{"version":3,"sources":["serviceWorker.ts","utils/config.ts","components/Nav.tsx","components/Layout.tsx","pages/Home.tsx","pages/Login.tsx","pages/Profile.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","theme","Chakratheme","colors","MenuItems","children","Text","mt","base","md","mr","display","Nav","href","name","Link","ActiveNav","links","RightButton","Button","bg","border","Header","active","React","useState","show","setShow","Flex","as","align","justify","wrap","padding","color","height","Heading","size","letterSpacing","Box","onClick","fill","width","viewBox","xmlns","d","alignItems","flexGrow","map","val","key","at","overflow","App","Layout","fontSize","ReactDOM","render","StrictMode","ThemeProvider","path","exact","component","Home","Login","Profile","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"gMAYMA,EAAcC,QACU,cAA7BC,OAAOC,SAASC,UAEc,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACxB,2DA2CH,SAASC,EAAgBC,EAAeC,GACvCC,UAAUC,cACRC,SAASJ,GACTK,MAAK,SAACC,GACNA,EAAaC,cAAgB,WAC5B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACD,cAA3BF,EAAiBG,QAChBT,UAAUC,cAAcS,YAI3BC,QAAQC,IACP,iHAKGb,GAAUA,EAAOc,UACpBd,EAAOc,SAAST,KAMjBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACpBf,EAAOe,UAAUV,WAOtBW,OAAM,SAACC,GACPL,QAAQK,MAAM,4CAA6CA,M,4BCnGjDC,EAAK,eACdC,IADc,CAEjBC,OAAO,eACHD,IAAYC,U,+ECFXC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACjB,kBAACC,EAAA,EAAD,CAAMC,GAAI,CAAEC,KAAM,EAAGC,GAAI,GAAKC,GAAI,EAAGC,QAAQ,SAC3CN,IAIGO,EAAM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACX,kBAAC,EAAD,KACC,kBAACC,EAAA,EAAD,CAAMF,KAAMA,GAAOC,KAIfE,EAAY,SAAC,GAAD,IAAGH,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACjB,kBAAC,EAAD,KACC,kBAACC,EAAA,EAAD,CAAMF,KAAMA,GACX,+BAAKC,EAAL,QAKGG,EAAQ,CACb,CAAEJ,KAAM,IAAKC,KAAM,QACnB,CAAED,KAAM,SAAUC,KAAM,SACxB,CAAED,KAAM,WAAYC,KAAM,YAGrBI,EAAc,kBACnB,kBAACC,EAAA,EAAD,CAAQC,GAAG,cAAcC,OAAO,OAAhC,iBAoEcC,EA/DA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACNC,IAAMC,UAAS,GADT,mBACvBC,EADuB,KACjBC,EADiB,KAI9B,OACC,kBAACC,EAAA,EAAD,CACCC,GAAG,MACHC,MAAM,SACNC,QAAQ,gBACRC,KAAK,OACLC,QAAQ,SACRb,GAAG,WACHc,MAAM,QACNC,OAAO,SAEP,kBAACP,EAAA,EAAD,CAAME,MAAM,SAASpB,GAAI,GACxB,kBAAC0B,EAAA,EAAD,CAASP,GAAG,KAAKQ,KAAK,KAAKC,cAAe,UAA1C,WAKD,kBAACC,EAAA,EAAD,CAAK5B,QAAS,CAAEH,KAAM,QAASC,GAAI,QAAU+B,QAnB5B,kBAAMb,GAASD,KAoB/B,yBACCe,KAAK,QACLC,MAAM,OACNC,QAAQ,YACRC,MAAM,8BAEN,uCACA,0BAAMC,EAAE,kDAIV,kBAACN,EAAA,EAAD,CACC5B,QAAS,CAAEH,KAAMkB,EAAO,QAAU,OAAQjB,GAAI,QAC9CiC,MAAO,CAAElC,KAAM,OAAQC,GAAI,QAC3BqC,WAAW,SACXC,SAAU,GAET9B,EAAM+B,KAAI,SAACC,GACX,OAAIA,EAAInC,OAASS,EAEf,kBAAC,EAAD,CACC2B,IAAKD,EAAInC,KACTD,KAAMoC,EAAIpC,KACVC,KAAMmC,EAAInC,OAIZ,kBAAC,EAAD,CAAKoC,IAAKD,EAAInC,KAAMD,KAAMoC,EAAIpC,KAAMC,KAAMmC,EAAInC,WAIjD,kBAACyB,EAAA,EAAD,CACC5B,QAAS,CAAEH,KAAMkB,EAAO,QAAU,OAAQjB,GAAI,SAC9CF,GAAI,CAAEC,KAAM,EAAGC,GAAI,IAEnB,kBAAC,EAAD,SCxFW,kBAAGJ,EAAH,EAAGA,SAAU8C,EAAb,EAAaA,GAAb,OACd,kBAACZ,EAAA,EAAD,CACCG,MAAM,OACNP,OAAO,OACPf,GAAG,WACHgC,SAAS,SACTN,WAAW,UAEX,kBAAC,EAAD,CAAKvB,OAAQ4B,IACb,kBAACvB,EAAA,EAAD,CAAMc,MAAM,OAAOX,QAAQ,UAC1B,kBAACQ,EAAA,EAAD,KAAMlC,MCFMgD,MARf,WACC,OACC,kBAACC,EAAD,CAAQH,GAAG,QACV,kBAAC7C,EAAA,EAAD,CAAMiD,SAAS,OAAf,0BCKYF,MARf,WACC,OACC,kBAACC,EAAD,CAAQH,GAAG,SACV,kBAAC7C,EAAA,EAAD,CAAMiD,SAAS,OAAf,2BCKYF,MARf,WACC,OACC,kBAACC,EAAD,CAAQH,GAAG,WACV,kBAAC7C,EAAA,EAAD,CAAMiD,SAAS,OAAf,6BCKHC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAACC,EAAA,EAAD,CAAe1D,MAAOA,GACrB,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAO2D,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,SAASC,OAAK,EAACC,UAAWE,IACtC,kBAAC,IAAD,CAAOJ,KAAK,WAAWC,OAAK,EAACC,UAAWG,OAI3CC,SAASC,eAAe,SPKlB,SAAkBpF,GACxB,GAA6C,kBAAmBC,UAAW,CAG1E,GADkB,IAAIoF,IAAIC,GAAwB5F,OAAOC,SAASmC,MACpDyD,SAAW7F,OAAOC,SAAS4F,OAIxC,OAGD7F,OAAO8F,iBAAiB,QAAQ,WAC/B,IAAMzF,EAAK,UAAMuF,GAAN,sBAEP9F,IAgEP,SAAiCO,EAAeC,GAE/CyF,MAAM1F,EAAO,CACZ2F,QAAS,CAAE,iBAAkB,YAE5BtF,MAAK,SAACuF,GAEN,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEpB,MAApBF,EAASG,QACO,MAAfF,IACuC,IAAvCA,EAAYG,QAAQ,cAGrB9F,UAAUC,cAAc8F,MAAM5F,MAAK,SAACC,GACnCA,EAAa4F,aAAa7F,MAAK,WAC9BV,OAAOC,SAASuG,eAKlBpG,EAAgBC,EAAOC,MAGxBgB,OAAM,WACNJ,QAAQC,IACP,oEAxFAsF,CAAwBpG,EAAOC,GAI/BC,UAAUC,cAAc8F,MAAM5F,MAAK,WAClCQ,QAAQC,IACP,iHAMFf,EAAgBC,EAAOC,OO3B3BE,K","file":"static/js/main.dac8a122.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === \"localhost\" ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === \"[::1]\" ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n\t\t)\n)\n\ntype Config = {\n\tonSuccess?: (registration: ServiceWorkerRegistration) => void\n\tonUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n\tif (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn\n\t\t}\n\n\t\twindow.addEventListener(\"load\", () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config)\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\"This web app is being served cache-first by a service \" +\n\t\t\t\t\t\t\t\"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then((registration) => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === \"installed\") {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t\"New content is available and will be used when all \" +\n\t\t\t\t\t\t\t\t\t\"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log(\"Content is cached for offline use.\")\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t\t.catch((error) => {\n\t\t\tconsole.error(\"Error during service worker registration:\", error)\n\t\t})\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { \"Service-Worker\": \"script\" },\n\t})\n\t\t.then((response) => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get(\"content-type\")\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf(\"javascript\") === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then((registration) => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config)\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t\"No internet connection found. App is running in offline mode.\"\n\t\t\t)\n\t\t})\n}\n\nexport function unregister() {\n\tif (\"serviceWorker\" in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then((registration) => {\n\t\t\t\tregistration.unregister()\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.error(error.message)\n\t\t\t})\n\t}\n}\n","import { theme as Chakratheme } from \"@chakra-ui/core\"\n\nexport const theme = {\n\t...Chakratheme,\n\tcolors: {\n\t\t...Chakratheme.colors,\n\t},\n}\n","import React from \"react\"\nimport { Box, Heading, Flex, Text, Link, Button } from \"@chakra-ui/core\"\n\nconst MenuItems = ({ children }) => (\n\t<Text mt={{ base: 4, md: 0 }} mr={6} display=\"block\">\n\t\t{children}\n\t</Text>\n)\n\nconst Nav = ({ href, name }) => (\n\t<MenuItems>\n\t\t<Link href={href}>{name}</Link>\n\t</MenuItems>\n)\n\nconst ActiveNav = ({ href, name }) => (\n\t<MenuItems>\n\t\t<Link href={href}>\n\t\t\t<b> {name} </b>\n\t\t</Link>\n\t</MenuItems>\n)\n\nconst links = [\n\t{ href: \"/\", name: \"home\" },\n\t{ href: \"/login\", name: \"login\" },\n\t{ href: \"/profile\", name: \"profile\" },\n]\n\nconst RightButton = () => (\n\t<Button bg=\"transparent\" border=\"1px\">\n\t\tDo something\n\t</Button>\n)\n\nconst Header = ({ active }) => {\n\tconst [show, setShow] = React.useState(false)\n\tconst toggleShow = () => setShow(!show)\n\n\treturn (\n\t\t<Flex\n\t\t\tas=\"nav\"\n\t\t\talign=\"center\"\n\t\t\tjustify=\"space-between\"\n\t\t\twrap=\"wrap\"\n\t\t\tpadding=\"1.5rem\"\n\t\t\tbg=\"teal.500\"\n\t\t\tcolor=\"white\"\n\t\t\theight=\"100px\"\n\t\t>\n\t\t\t<Flex align=\"center\" mr={5}>\n\t\t\t\t<Heading as=\"h1\" size=\"lg\" letterSpacing={\"-.1rem\"}>\n\t\t\t\t\tFlaire\n\t\t\t\t</Heading>\n\t\t\t</Flex>\n\n\t\t\t<Box display={{ base: \"block\", md: \"none\" }} onClick={toggleShow}>\n\t\t\t\t<svg\n\t\t\t\t\tfill=\"white\"\n\t\t\t\t\twidth=\"12px\"\n\t\t\t\t\tviewBox=\"0 0 20 20\"\n\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t>\n\t\t\t\t\t<title>Menu</title>\n\t\t\t\t\t<path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n\t\t\t\t</svg>\n\t\t\t</Box>\n\n\t\t\t<Box\n\t\t\t\tdisplay={{ base: show ? \"block\" : \"none\", md: \"flex\" }}\n\t\t\t\twidth={{ base: \"full\", md: \"auto\" }}\n\t\t\t\talignItems=\"center\"\n\t\t\t\tflexGrow={1}\n\t\t\t>\n\t\t\t\t{links.map((val) => {\n\t\t\t\t\tif (val.name === active)\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ActiveNav\n\t\t\t\t\t\t\t\tkey={val.name}\n\t\t\t\t\t\t\t\thref={val.href}\n\t\t\t\t\t\t\t\tname={val.name}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Nav key={val.name} href={val.href} name={val.name} />\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</Box>\n\t\t\t<Box\n\t\t\t\tdisplay={{ base: show ? \"block\" : \"none\", md: \"block\" }}\n\t\t\t\tmt={{ base: 4, md: 0 }}\n\t\t\t>\n\t\t\t\t<RightButton />\n\t\t\t</Box>\n\t\t</Flex>\n\t)\n}\n\nexport default Header\n","import React from \"react\"\nimport { Box, Flex, Text } from \"@chakra-ui/core\"\nimport Nav from \"./Nav\"\n\nexport default ({ children, at }) => (\n\t<Box\n\t\twidth=\"100%\"\n\t\theight=\"100%\"\n\t\tbg=\"blue.100\"\n\t\toverflow=\"hidden\"\n\t\talignItems=\"center\"\n\t>\n\t\t<Nav active={at} />\n\t\t<Flex width=\"100%\" justify=\"center\">\n\t\t\t<Box>{children}</Box>\n\t\t</Flex>\n\t</Box>\n)\n","import React from \"react\"\nimport { Text } from \"@chakra-ui/core\"\nimport Layout from \"../components/Layout\"\n\nfunction App() {\n\treturn (\n\t\t<Layout at=\"home\">\n\t\t\t<Text fontSize=\"3xl\">welcome to home page</Text>\n\t\t</Layout>\n\t)\n}\n\nexport default App\n","import React from \"react\"\nimport { Text } from \"@chakra-ui/core\"\nimport Layout from \"../components/Layout\"\n\nfunction App() {\n\treturn (\n\t\t<Layout at=\"login\">\n\t\t\t<Text fontSize=\"3xl\">welcome to login page</Text>\n\t\t</Layout>\n\t)\n}\n\nexport default App\n","import React from \"react\"\nimport { Text } from \"@chakra-ui/core\"\nimport Layout from \"../components/Layout\"\n\nfunction App() {\n\treturn (\n\t\t<Layout at=\"profile\">\n\t\t\t<Text fontSize=\"3xl\">welcome to profile page</Text>\n\t\t</Layout>\n\t)\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { ThemeProvider } from \"@chakra-ui/core\"\nimport { theme } from \"./utils/config\"\nimport { BrowserRouter, Route } from \"react-router-dom\"\nimport \"./index.css\"\n\nimport Home from \"./pages/Home\"\nimport Login from \"./pages/Login\"\nimport Profile from \"./pages/Profile\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<BrowserRouter>\n\t\t\t\t<Route path=\"/\" exact component={Home} />\n\t\t\t\t<Route path=\"/login\" exact component={Login} />\n\t\t\t\t<Route path=\"/profile\" exact component={Profile} />\n\t\t\t</BrowserRouter>\n\t\t</ThemeProvider>\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}